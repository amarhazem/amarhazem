name: Prettier (Optimized)

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.18.0"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed files
          if [ "${{ github.event_name }}" = "push" ]; then
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          else
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          fi

          # Filter for files that should be formatted
          FORMATTED_FILES=$(echo "$CHANGED_FILES" | grep -E '\.(ts|tsx|js|jsx|json|md|css|scss|html|yaml|yml)$' || true)

          if [ -n "$FORMATTED_FILES" ]; then
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$FORMATTED_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "has_files=true" >> $GITHUB_OUTPUT
          else
            echo "has_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Check formatting
        if: steps.changed-files.outputs.has_files == 'true'
        run: |
          # Create a temporary file with the list of files
          echo "${{ steps.changed-files.outputs.files }}" > /tmp/files.txt

          # Check formatting only for changed files
          cat /tmp/files.txt | xargs -r pnpm exec prettier --check

      - name: Format check failed
        if: steps.changed-files.outputs.has_files == 'true' && failure()
        run: |
          echo "❌ Some files are not properly formatted."
          echo ""
          echo "Files that need formatting:"
          echo "${{ steps.changed-files.outputs.files }}"
          echo ""
          echo "To fix locally, run:"
          echo "pnpm format"
          exit 1

      - name: No files to check
        if: steps.changed-files.outputs.has_files == 'false'
        run: echo "✅ No files need formatting"
